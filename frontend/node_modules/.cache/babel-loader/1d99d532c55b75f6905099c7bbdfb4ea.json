{"ast":null,"code":"var _jsxFileName = \"/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/comp/profil/FormProfil.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormProfil(props) {\n  _s();\n  //state du formulaire\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [imageUrl, setimageUrl] = useState(\"\");\n  const fetchData = props.fetchData;\n  console.log(\"-------------------fetchData depuis modal profil----------------------\");\n  console.log(fetchData);\n\n  // recupération des states de app sous forme de props\n  const userData = props.userData;\n  const paramsProfil = props.paramsProfil;\n\n  // axios mise a jour des infos utilisateurs\n\n  const handleLogin = e => {\n    e.preventDefault();\n    axios({\n      method: \"put\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userData[0].token}`\n      },\n      data: {\n        name,\n        job,\n        bio,\n        imageUrl\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        alert(\"Profil mis à jour avec succé\");\n        /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this);\n      } else {\n        console.log(\"erreur lors de l'envoi du formulaire redirection impossible\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleChange_name = event => {\n    setName(event.target.value);\n  };\n  const handleChange_job = event => {\n    setJob(event.target.value);\n  };\n  const handleChange_imageUrl = event => {\n    setimageUrl(event.target.value);\n  };\n  const handleChange_bio = event => {\n    setBio(event.target.value);\n  };\n  useEffect(() => {\n    paramsProfil();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__container--profil\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container my-3 p-3\",\n      encType: \"multipart/form-data\",\n      method: \"put\",\n      onSubmit: handleLogin,\n      required: props.required,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"Choisir votre photo de profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"file\",\n        name: \"images\",\n        stateValue: imageUrl,\n        value: fetchData[0].imageUrl,\n        onChange: handleChange_imageUrl,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        stateValue: name,\n        value: fetchData[0].name,\n        onChange: handleChange_name,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre Travail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"text\",\n        id: \"job\",\n        name: \"job\",\n        stateValue: job,\n        value: fetchData[0].job,\n        onChange: handleChange_job,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre Biographie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Ecrit ta biographie ici...\",\n        stateValue: bio,\n        value: fetchData[0].bio,\n        onChange: handleChange_bio,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary-color mt-3\",\n        value: \"Enregistrer\",\n        type: \"submit\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(FormProfil, \"erEiCG1tZlGR5c/o1rNKYkNQIRo=\");\n_c = FormProfil;\nvar _c;\n$RefreshReg$(_c, \"FormProfil\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navigate","FormProfil","props","name","setName","job","setJob","bio","setBio","imageUrl","setimageUrl","fetchData","console","log","userData","paramsProfil","handleLogin","e","preventDefault","method","url","process","env","REACT_APP_URL","id","headers","Authorization","token","data","then","res","status","alert","catch","err","handleChange_name","event","target","value","handleChange_job","handleChange_imageUrl","handleChange_bio","required"],"sources":["/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/comp/profil/FormProfil.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from \"axios\";\nimport { Navigate } from 'react-router-dom';\n\n\n\nexport default function FormProfil(props) {\n    //state du formulaire\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [imageUrl, setimageUrl] = useState(\"\");\n  const fetchData= props.fetchData\n  console.log(\"-------------------fetchData depuis modal profil----------------------\");\n  console.log(fetchData);\n\n  // recupération des states de app sous forme de props\n  const userData = props.userData;\n  const paramsProfil=props.paramsProfil\n\n  // axios mise a jour des infos utilisateurs\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    axios({\n      method: \"put\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userData[0].token}`,\n      },\n      data: {\n        name,\n        job,\n        bio,\n        imageUrl,\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n        alert(\"Profil mis à jour avec succé\");\n        <Navigate to=\"/profil\" />\n\n        } else {\n          console.log(\n            \"erreur lors de l'envoi du formulaire redirection impossible\"\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleChange_name = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleChange_job = (event) => {\n    setJob(event.target.value);\n  };\n\n  const handleChange_imageUrl = (event) => {\n    setimageUrl(event.target.value);\n  };\n\n  const handleChange_bio = (event) => {\n    setBio(event.target.value);\n  };\n\n  useEffect(()=>{\n    paramsProfil()\n },[])\n\n  return (\n    <div className=\"form__container--profil\">\n    <form\n      className=\"container my-3 p-3\"\n      encType=\"multipart/form-data\"\n      method=\"put\"\n      onSubmit={handleLogin}\n      required = {props.required}\n    >\n      <label className=\"form-label text-capitalize\">\n        Choisir votre photo de profil\n      </label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"file\"\n        name=\"images\"\n        stateValue={imageUrl}\n        value={fetchData[0].imageUrl}\n        onChange={handleChange_imageUrl}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre nom</label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        stateValue={name}\n        value={fetchData[0].name}\n        onChange={handleChange_name}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre Travail</label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"text\"\n        id=\"job\"\n        name=\"job\"\n        stateValue={job}\n        value={fetchData[0].job}\n        onChange={handleChange_job}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre Biographie</label>\n      <textarea\n        className=\"form-control mb-2\"\n        placeholder=\"Ecrit ta biographie ici...\"\n        stateValue={bio}\n        value={fetchData[0].bio}\n        onChange={handleChange_bio}\n        required = {props.required}\n      ></textarea>\n      <button className=\"btn-primary-color mt-3\" value=\"Enregistrer\" type=\"submit\" >Enregistrer</button>\n    </form>\n  </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}