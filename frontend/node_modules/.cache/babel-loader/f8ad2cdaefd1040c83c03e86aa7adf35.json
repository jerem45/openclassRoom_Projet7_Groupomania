{"ast":null,"code":"var _jsxFileName = \"/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react/jsx-pascal-case */\nimport React, { useEffect, useState } from \"react\";\nimport EmpptyHome from \"../../comp/home/EmpptyHome\";\nimport ActiveHome from \"../../comp/home/ActiveHome\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  //Recuperation props Token Id depuis app\n  const userData = props.userData;\n\n  //State de récupération des post Data\n  const [userPost, setUserPost] = useState([{\n    value: []\n  }]);\n\n  //State qui définis l'acces a la fonctionnalité de poster des messages ou non  \n  const [access, setAccess] = useState([{\n    value: false\n  }]);\n\n  //State de récupération de toutes la Data contenus dans le profil de l'utilisateur\n  const [allDataUser, setAllDataUser] = useState([{\n    value: []\n  }]);\n\n  //recupération des post des utilisateurs \n  function getRequestHome() {\n    axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}api/post/`,\n      headers: {\n        Authorization: `Bearer ${userData[0].token}`\n      }\n    }).then(res => {\n      function getPostData() {\n        const newUserPost = [...userPost];\n        newUserPost[0].value = res.data;\n        setUserPost(newUserPost);\n      }\n      getPostData();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function getUserControlData() {\n    axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n      headers: {\n        Authorization: `Bearer ${userData[0].token}`\n      }\n    }).then(res => {\n      //FONCTION qui sert à définir l'affichage de la page\n      function accessAuthorize() {\n        const newAccess = [...access];\n        newAccess[0].value = true;\n        setAccess(newAccess);\n      }\n      //la condition d'affichage \n      if (res.data.name === undefined) {\n        console.log(\"Mettre a jour le profil\");\n      } else {\n        accessAuthorize();\n      }\n\n      //function de récupération des données de l'utilisateur  : name/bio/job/img\n\n      function getUserData() {\n        const newAllDataUser = [...allDataUser];\n        newAllDataUser[0].value = res.data;\n        setAllDataUser(newAllDataUser);\n      }\n      getUserData();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  //didMount\n  useEffect(() => {\n    getRequestHome();\n    getUserControlData();\n    return getRequestHome();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //JSX\n\n  if (access[0].value === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EmpptyHome, {\n        userPost: userPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ActiveHome, {\n        userData: userData,\n        access: access,\n        userPost: userPost,\n        setUserPost: setUserPost,\n        allDataUser: allDataUser,\n        getRequestHome: getRequestHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Home, \"bzMpWbhKZ+YnLwKk0Cd0YEuFu+M=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","EmpptyHome","ActiveHome","axios","Home","props","userData","userPost","setUserPost","value","access","setAccess","allDataUser","setAllDataUser","getRequestHome","method","url","process","env","REACT_APP_URL","headers","Authorization","token","then","res","getPostData","newUserPost","data","catch","err","console","log","getUserControlData","id","accessAuthorize","newAccess","name","undefined","getUserData","newAllDataUser"],"sources":["/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/pages/home/Home.js"],"sourcesContent":["/* eslint-disable react/jsx-pascal-case */\nimport React,{useEffect, useState}from \"react\";\nimport EmpptyHome from \"../../comp/home/EmpptyHome\";\nimport ActiveHome from \"../../comp/home/ActiveHome\";\nimport axios from \"axios\";\n\nconst Home = (props) => {\n  //Recuperation props Token Id depuis app\n  const userData = props.userData;\n\n  //State de récupération des post Data\n  const [userPost, setUserPost]= useState([\n    {value : []}\n  ])\n\n   //State qui définis l'acces a la fonctionnalité de poster des messages ou non  \n   const [access, setAccess]= useState([{value:false}])\n\n  //State de récupération de toutes la Data contenus dans le profil de l'utilisateur\n  const [allDataUser,setAllDataUser] = useState([{value:[]}])\n\n      //recupération des post des utilisateurs \n      function getRequestHome() {\n        axios({\n          method: \"get\",\n          url: `${process.env.REACT_APP_URL}api/post/`,\n  \n          headers: {\n            Authorization: `Bearer ${userData[0].token}`,\n          },\n        })\n          .then((res) => {\n           function getPostData (){\n            const newUserPost = [...userPost]\n            newUserPost[0].value= res.data\n            setUserPost(\n              newUserPost\n            )\n           }  \n        \n           getPostData()\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n  function getUserControlData(){\n    axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n  \n        headers: {\n          Authorization: `Bearer ${userData[0].token}`,\n        },\n      })\n        .then((res) => {\n          //FONCTION qui sert à définir l'affichage de la page\n          function accessAuthorize(){\n            const newAccess = [...access]\n            newAccess[0].value = true\n            setAccess(\n              newAccess\n            )\n           }\n           //la condition d'affichage \n        if(res.data.name === undefined){\n          console.log(\"Mettre a jour le profil\");\n        } else{\n           accessAuthorize()\n        }\n  \n          //function de récupération des données de l'utilisateur  : name/bio/job/img\n  \n          function getUserData (){\n            const newAllDataUser = [...allDataUser]\n            newAllDataUser[0].value = res.data\n            setAllDataUser(\n              newAllDataUser\n            )\n          }\n            getUserData()\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n   //didMount\n   useEffect(() => {\n    getRequestHome();\n    getUserControlData()\n\n    return getRequestHome();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  //JSX\n\n  if(access[0].value === false){\n    return (\n      <div>   \n      <EmpptyHome userPost={userPost} />\n      </div>\n   \n    )\n  } else {\n    return(\n      <div>\n        <ActiveHome userData={userData} access={access} userPost={userPost} setUserPost={setUserPost} allDataUser={allDataUser} getRequestHome={getRequestHome} /></div>\n    )\n  }\n\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}