{"ast":null,"code":"var _jsxFileName = \"/home/xeannort/Documents/Projet/GitHub/groupomania/frontend/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react/jsx-pascal-case */\nimport React, { useEffect, useState } from \"react\";\nimport EmpptyHome from \"../../comp/home/EmpptyHome\";\nimport ActiveHome from \"../../comp/home/ActiveHome\";\nimport axios from \"axios\";\nimport \"./home.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  //Recuperation props Token Id depuis app\n  const userData = props.userData;\n  console.log(\"userData depuis Home\");\n  console.log(userData);\n\n  //State de récupération des post Data\n  const [userPost, setUserPost] = useState([{\n    value: []\n  }]);\n  //State qui définis l'acces a la fonctionnalité de poster des messages ou non  \n  const [access, setAccess] = useState([{\n    value: false\n  }]);\n\n  //State de récupération de toutes la Data contenus dans le profil de l'utilisateur\n\n  const [allDataUser, setAllDataUser] = useState([{\n    value: []\n  }]);\n  //didMount\n  useEffect(() => {\n    //recupération des post des utilisateurs utilisateur\n    function getRequestHome() {\n      axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_URL}api/post/`,\n        headers: {\n          Authorization: `Bearer ${userData[0].token}`\n        }\n      }).then(res => {\n        function getPostData() {\n          const newUserPost = [...userPost];\n          newUserPost[0].value = res.data;\n          setUserPost(newUserPost);\n        }\n        getPostData();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    function getUserControlData() {\n      axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n        headers: {\n          Authorization: `Bearer ${userData[0].token}`\n        }\n      }).then(res => {\n        //FONCTION qui sert à définir l'affichage de la page\n        function accessAuthorize() {\n          const newAccess = [...access];\n          newAccess[0].value = true;\n          setAccess(newAccess);\n        }\n        //la condition d'affichage \n        if (res.data.name === undefined) {\n          console.log(\"Mettre a jour le profil\");\n        } else {\n          accessAuthorize();\n        }\n\n        //function de récupération des données de l'utilisateur  : name/bio/job/img\n\n        function getUserData() {\n          const newAllDataUser = [...allDataUser];\n          newAllDataUser[0].value = res.data;\n          setAllDataUser(newAllDataUser);\n        }\n        getUserData();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    getRequestHome();\n    getUserControlData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //JSX\n\n  if (access[0].value === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EmpptyHome, {\n        userPost: userPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ActiveHome, {\n        userData: userData,\n        access: access,\n        userPost: userPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Home, \"bzMpWbhKZ+YnLwKk0Cd0YEuFu+M=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","EmpptyHome","ActiveHome","axios","Home","props","userData","console","log","userPost","setUserPost","value","access","setAccess","allDataUser","setAllDataUser","getRequestHome","method","url","process","env","REACT_APP_URL","headers","Authorization","token","then","res","getPostData","newUserPost","data","catch","err","getUserControlData","id","accessAuthorize","newAccess","name","undefined","getUserData","newAllDataUser"],"sources":["/home/xeannort/Documents/Projet/GitHub/groupomania/frontend/src/pages/home/Home.js"],"sourcesContent":["/* eslint-disable react/jsx-pascal-case */\nimport React,{useEffect, useState}from \"react\";\nimport EmpptyHome from \"../../comp/home/EmpptyHome\";\nimport ActiveHome from \"../../comp/home/ActiveHome\";\nimport axios from \"axios\";\nimport \"./home.scss\";\n\nconst Home = (props) => {\n  //Recuperation props Token Id depuis app\n  const userData = props.userData;\n  console.log(\"userData depuis Home\");\n  console.log(userData);\n\n  //State de récupération des post Data\n  const [userPost, setUserPost]= useState([\n    {value : []}\n  ])\n   //State qui définis l'acces a la fonctionnalité de poster des messages ou non  \n   const [access, setAccess]= useState([{value:false}])\n\n  //State de récupération de toutes la Data contenus dans le profil de l'utilisateur\n\n  const [allDataUser,setAllDataUser] = useState([{value:[]}])\n   //didMount\n   useEffect(() => {\n    //recupération des post des utilisateurs utilisateur\n    function getRequestHome() {\n      axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_URL}api/post/`,\n\n        headers: {\n          Authorization: `Bearer ${userData[0].token}`,\n        },\n      })\n        .then((res) => {\n         function getPostData (){\n          const newUserPost = [...userPost]\n          newUserPost[0].value= res.data\n          setUserPost(\n            newUserPost\n          )\n         }  \n      \n         getPostData()\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\nfunction getUserControlData(){\n  axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n\n      headers: {\n        Authorization: `Bearer ${userData[0].token}`,\n      },\n    })\n      .then((res) => {\n        //FONCTION qui sert à définir l'affichage de la page\n        function accessAuthorize(){\n          const newAccess = [...access]\n          newAccess[0].value = true\n          setAccess(\n            newAccess\n          )\n         }\n         //la condition d'affichage \n      if(res.data.name === undefined){\n        console.log(\"Mettre a jour le profil\");\n      } else{\n         accessAuthorize()\n      }\n\n        //function de récupération des données de l'utilisateur  : name/bio/job/img\n\n        function getUserData (){\n          const newAllDataUser = [...allDataUser]\n          newAllDataUser[0].value = res.data\n          setAllDataUser(\n            newAllDataUser\n          )\n        }\n          getUserData()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n}\n    \n  \n    getRequestHome();\n    getUserControlData()\n   \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //JSX\n\n  if(access[0].value === false){\n    return (\n      <div>   \n      <EmpptyHome userPost={userPost} />\n      </div>\n   \n    )\n  } else {\n    return(\n      <div>\n        <ActiveHome userData={userData} access={access} userPost={userPost}/></div>\n    )\n  }\n\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}