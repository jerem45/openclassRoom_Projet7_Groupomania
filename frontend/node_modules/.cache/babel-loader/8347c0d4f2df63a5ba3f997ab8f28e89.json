{"ast":null,"code":"var _jsxFileName = \"/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/comp/profil/FormProfil.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormProfil(props) {\n  _s();\n  //state du formulaire\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [userInfo, setUserInfo] = useState([{\n    name: props.fetchData[0].name,\n    bio: props.fetchData[0].bio,\n    job: props.fetchData[0].job,\n    img: props.fetchData[0].imageUrl\n  }]);\n  function writeInfo() {\n    const newUserInfo = [...userInfo];\n    newUserInfo[0].name = \"\";\n    newUserInfo[0].bio = \"\";\n    newUserInfo[0].job = \"\";\n    newUserInfo[0].img = \"\";\n    setUserInfo(newUserInfo);\n  }\n\n  // recupération des states de app sous forme de props\n  const userData = props.userData;\n\n  // axios mise a jour des infos utilisateurs\n\n  const handleLogin = e => {\n    e.preventDefault();\n    axios({\n      method: \"put\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userData[0].token}`\n      },\n      data: {\n        name,\n        job,\n        bio,\n        imageUrl\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        alert(\"Profil mis à jour avec succé\");\n        /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this);\n      } else {\n        console.log(\"erreur lors de l'envoi du formulaire redirection impossible\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleChange_name = event => {\n    setName(event.target.value);\n  };\n  const handleChange_job = event => {\n    setJob(event.target.value);\n  };\n  const handleChange_imageUrl = event => {\n    setimageUrl(event.target.value);\n  };\n  const handleChange_bio = event => {\n    setBio(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__container--profil\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container my-3 p-3\",\n      encType: \"multipart/form-data\",\n      method: \"put\",\n      onSubmit: handleLogin,\n      required: props.required,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"Choisir votre photo de profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"file\",\n        name: \"images\",\n        stateValue: imageUrl,\n        onChange: handleChange_imageUrl,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        stateValue: name,\n        onClick: writeInfo,\n        onChange: handleChange_name,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre Travail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"text\",\n        id: \"job\",\n        name: \"job\",\n        stateValue: job,\n        onChange: handleChange_job,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-capitalize\",\n        children: \"votre Biographie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Ecrit ta biographie ici...\",\n        stateValue: bio,\n        onChange: handleChange_bio,\n        required: props.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary-color mt-3\",\n        value: \"Enregistrer\",\n        type: \"submit\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(FormProfil, \"rtuJLRhCrFJI3/Bt1LbIUl1DGTg=\");\n_c = FormProfil;\nvar _c;\n$RefreshReg$(_c, \"FormProfil\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navigate","FormProfil","props","name","setName","job","setJob","bio","setBio","userInfo","setUserInfo","fetchData","img","imageUrl","writeInfo","newUserInfo","userData","handleLogin","e","preventDefault","method","url","process","env","REACT_APP_URL","id","headers","Authorization","token","data","then","res","status","alert","console","log","catch","err","handleChange_name","event","target","value","handleChange_job","handleChange_imageUrl","setimageUrl","handleChange_bio","required"],"sources":["/home/xeannort/Documents/Projet/GitHub/bootstrap/groupomania/frontend/src/comp/profil/FormProfil.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from \"axios\";\nimport { Navigate } from 'react-router-dom';\n\n\n\nexport default function FormProfil(props) {\n    //state du formulaire\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n\n\n\n  const [userInfo, setUserInfo]= useState([{\n    name : props.fetchData[0].name,\n    bio:  props.fetchData[0].bio,\n    job:  props.fetchData[0].job,\n    img:  props.fetchData[0].imageUrl\n  }])\n \nfunction writeInfo (){\n  const newUserInfo =[...userInfo]\n  newUserInfo[0].name = \"\"\n  newUserInfo[0].bio = \"\"\n  newUserInfo[0].job = \"\"\n  newUserInfo[0].img = \"\"\n\n  setUserInfo(newUserInfo)\n}\n\n\n  // recupération des states de app sous forme de props\n  const userData = props.userData;\n\n  // axios mise a jour des infos utilisateurs\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    axios({\n      method: \"put\",\n      url: `${process.env.REACT_APP_URL}api/profil/${userData[1].id}`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userData[0].token}`,\n      },\n      data: {\n        name,\n        job,\n        bio,\n        imageUrl,\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n        alert(\"Profil mis à jour avec succé\");\n        <Navigate to=\"/profil\" />\n\n        } else {\n          console.log(\n            \"erreur lors de l'envoi du formulaire redirection impossible\"\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleChange_name = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleChange_job = (event) => {\n    setJob(event.target.value);\n  };\n\n  const handleChange_imageUrl = (event) => {\n    setimageUrl(event.target.value);\n  };\n\n  const handleChange_bio = (event) => {\n    setBio(event.target.value);\n  };\n\n  return (\n    <div className=\"form__container--profil\">\n    <form\n      className=\"container my-3 p-3\"\n      encType=\"multipart/form-data\"\n      method=\"put\"\n      onSubmit={handleLogin}\n      required = {props.required}\n    >\n      <label className=\"form-label text-capitalize\">\n        Choisir votre photo de profil\n      </label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"file\"\n        name=\"images\"\n         stateValue={imageUrl}\n        onChange={handleChange_imageUrl}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre nom</label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        stateValue={name}\n        \n        onClick = {writeInfo}\n        onChange={handleChange_name}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre Travail</label>\n      <input\n        className=\"form-control mb-2\"\n        type=\"text\"\n        id=\"job\"\n        name=\"job\"\n        stateValue={job}\n     \n        onChange={handleChange_job}\n        required = {props.required}\n      />\n\n      <label className=\"form-label text-capitalize\">votre Biographie</label>\n      <textarea\n        className=\"form-control mb-2\"\n        placeholder=\"Ecrit ta biographie ici...\"\n        stateValue={bio}\n     \n        onChange={handleChange_bio}\n        required = {props.required}\n      ></textarea>\n      <button className=\"btn-primary-color mt-3\" value=\"Enregistrer\" type=\"submit\" >Enregistrer</button>\n    </form>\n  </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}